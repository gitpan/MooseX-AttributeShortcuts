Revision history for MooseX-AttributeShortcuts

0.015     2012-08-26 11:48:29 America/Los_Angeles
	* add 'builder => sub { ... }' shortcut [gh #4]

0.014     2012-08-16 17:26:09 America/Los_Angeles
	* explictly test for definedness rather than truthiness when determining
	  if someone has also specified a default along with is => lazy

0.013     2012-07-15 22:11:37 America/Los_Angeles
	* Restore tests lost from (d11e67a) -- no functional / code changes!

0.012     2012-05-02 11:02:10 America/Los_Angeles
	* TRIAL/dev release
	* Don't try to guess what sort of metaclass we need; just die if we don't
	  have one
	* Misc cleanups

0.011     2012-04-30 13:41:05 America/Los_Angeles
	* TRIAL/dev release
	* Handle the no-metaclass case in our init_meta()

0.010     2012-04-06 18:25:42 America/Los_Angeles
	* Minor doc updates; no functional changes from 0.009 (TRIAL)

0.009     2012-03-26 23:46:58 America/Los_Angeles
	* Drop 'init_arg => undef' from our 'ro => "lazy"' shortcut.  This was
	  done in coordination with the author of Moo, based on consistently
	  surprised user feedback.

0.008     2012-01-10 23:05:34 America/Los_Angeles
	* Prebuild our roles, for better caching (and fewer warnings, at least)

0.007     2012-01-10 17:30:57 America/Los_Angeles
	* Allow default to be also be specified when is => lazy

0.006     2011-10-27 10:15:07 America/Los_Angeles
	* We now handle "trigger => 1", as well
	* All our tests are wrapped in Test::Moose::with_immutable(),
	  just to make sure that we immutablize properly

0.005     2011-08-18 20:54:02 America/Los_Angeles
    * handle attribute extension/cloning, for realz this time
    * we now handle the case of attributes defined in roles by properly
      applying our trait to the applied_attribute metaclass

0.004     2011-08-02 23:44:20 America/Los_Angeles
    * add lazy_build => 'private'
    * our laziness was being ignored when an attribute defined in one class
      was being extended/cloned in another class -- this could not stand

0.003     2011-07-03 16:40:19 America/Los_Angeles
    * handle predicate => 1, clearer => 1 as well

0.002     2011-03-30 23:43:11 America/Los_Angeles
    * Convert our trait to a parameterized role, to allow for different
      build and writer prefixes (e.g. '_set_' vs '_')
    * Cause 'is => "lazy"' to behave the way it does in Moo
    * Change the default writer prefix from _ to _set_; it was pointed out
      that this is the expected way to do things (and makes more sense,
      really).

0.001     2011-03-27 08:12:11 America/Los_Angeles
    * initial release
